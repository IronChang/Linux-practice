P2P下载器
需求：做一个什么功能的项目
本质：点对点下载器、任意两台主机之间可以共享下载对方的共享文件
市场调研：为什么要做这个项目（面试时回答面试官）
技术调研：为了看这个项目使用当前技术储备能否完成
概要设计：
	1.网络上任意两个主机共享---》必须知道网络上都要哪些主机能够与自己建立共享关系
	2.从一个指定的主机上去下载自己想要的文件，可以将自己的文件提供给别人下载

P2P下载器
	1.两大模块：客户端模块/服务端模块
	客户端模块：
		1.查看有哪些共享主机--向网络中广播配对请求，得到响应
		2.获取指定主机的文件列表--向指定主机发送获取列表请求
		3.从指定主机上面下载文件--向指定主机发送下载指定文件请求
	服务端模块：
	    1.针对客户端功能能够提供客户端的请求服务提供
	
详细设计：针对概要设计中设计的的各个功能点，详细讲解如何实现
	1.客户端：
		1.查看网络中的共享主机--局域网中的主机配对
			1.作为客户端，广播一个主机配对请求，得到响应则认为主机在线可共享文件
			2.UDP协议自带局域网广播功能，可能丢包；
			3.TCP没有自带广播功能，必须知道所有主机的IP地址，才能发送请求(使用)。因为传输数据为了安全
			并且为了练习一下TCP协议，但是使用TCP必须知道局域网中的主机IP才能发送请求。
		2.如何获取局域网中所有主机的IP地址
			IP组成：网络号 + 主机号
			子网掩码&本机IP地址 = 网络号
			~子网掩码：= 网络中最大主机号
			当前局域网IP范围 = 网络号 + 1 ~ 网络号 + (最大主机号-1) 
		3.向各个IP地址发送配对请求--网络通信(五元组：本机IP+端口+对端IP+端口+协议)
			1.自定制协议--微乎其微
			2.知名协议--HTTP--重点使用了解用法及理解，并且用户可以自定制
			3.HTTP协议：首行+头部+(空行+正文)
    接口设计：
	1.网络主机配对接口--为了提高效率(使用线程池)
	 	1.客户端：GET/POST/HEAD  URL(统一资源定位符)
		首行：GET /hostpair HTTP/1.1
		头部：Content-Length：0
		2.服务器：
		首行：HTTP/1.1 200 OK
		头部：Content_Length：0 
		3.完成后就能够获得当前局域网中在线主机IP地址列表
	2.获取指定主机的文件列表接口--向指定主机发送获取列表请求	
		1.客户端  ----  指定主机
		首行：GET /list HTTP/1.1
		头部：Content-Length：0
		2.服务器：---- 检索共享文件夹下所有文件信息(待丰富)，从正文返回
		首行：HTTP/1.1 200 OK
		头部：Content_Length：
		空行：
		正文(序列化/反序列化)：filename \t filename
		注意：获取共享文件夹下的文件信息(注意不要目录),为防止粘包采用最为简单的分隔符来进行，(json序列化后续补充)
		3.完成后客户端或取到了指定主机上所共享的文件名称
    3.下载指定主机上的指定文件接口
		1.客户端 ---- 创建一个文件并且打开，将服务器返回正文写入文件
		首行：GET /list HTTP/1.1
		头部：Content-Length：0
		2.服务器：---- 检索文件是否存在\是否是个目录\如果存在：读取文件数据响应正文
		首行：HTTP/1.1 200 OK
		头部：Content_Length：(文件大小)
		空行：
		正文(文件数据)：
总体功能流程：
	客户端：
		1.获取网卡信息--获取主机IP + MASK--局域网IP列表
		2.想所以IP发送配对请求 --- 得到在线主机列表(将在线主机的IP打印到终端)
		3.西安则一个主机(IP)发送获取该主机的文件列表请求--获取到共享的文件列表(将文件列表打印到终端)
		4.从这个主机下载指定的共享文件(创建文件，打开文件，将响应数据写入文件。关闭文件)
	服务器：
		1.接收到主机请求配对，做出200响应
		2.接收到文件列表请求
			1.检测获取指定共享目录下文件信息(文件名)
			2.将所有文件名组织成HTTP响应正文
		3.接受到指定文件下载请求
			1.通过文件名检测文件是否存在
			2.检测文件是否是一个普通文件
			3.打开文件，读取文件数据作为HTTP响应正文响应发送
代码模块设计
	1.获取网卡信息模块(工具类)(获取当前主机上面的网卡信息，通过这些信息，可以获取当前主机的IP地址和子网掩码)
	Adapter
	{
	public:
		uint32_t _ip_addr;//网络字节序的IP地址
		uint32_t _mask_addr;//子网掩码信息
	};
	AdapterUtil
	{
		#ifdef _WIN32
			static GetAllAdapter(std::vector<Adapter> *list)//获取所用网卡信息,返回信息数组
		#else
			static GetAllAdapter(std::vector<Adapter> *list)//获取所用网卡信息,返回信息数组
		#endif
	};
	2.客户端代码模块
	Client
	{
		//获取在线主机，向所有主机IP发送配对请求，判断是否在线
		public：
			void HostPair(const uint32_t ip);//直接向主机发送请求，判断是否在线---这是一个线程入口函数
			bool GetOnlineHost(){1.获取网卡信息--获取主机IP，2.创建线程，传入HostPair，判断是否在线}
			bool GetShareList(const uint32_t ip);//获取指定主机的共享文件列表，打印在终端
			bool DownLoadFile(const uint32_t ip,const std::string &filename);
		private:
			std::vector<uint32_t> _online_host_list;//保存所有在线主机IP信息
	}；
	3.服务端模块
	Server
	{
		//1.搭建HTTP服务器，对HTTP请求进行业务处理做出响应--使用第三方库实现---cpp-httplib
		//2.针对客户端功能请求进行业务处理接口实现即可
		void HostPair();//针对客户端主机配对请求做出响应
		void ShareList();//针对客户端共享文件列表做出响应---(获取目录下文件信息)
		void DownLoad();//针对客户端下载请求做出响应---(打开文件读数据响应给客户端)
	}；